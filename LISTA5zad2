#include <stdio.h> 
#include <unistd.h> 
#include <fcntl.h> 

#define size 256

int main(int argc, char *argv[]) {

    pid_t pid;
    int fd[2], myFile, n;
    char buf[size];
    
    if(pipe(fd) < 0) {

        fprintf(stderr, "Failed creating pipe\n");
        return 1;
    }

    pid = fork();

    if(pid == 0) { // dziecko
        close(fd[1]);
        close(0); // zamyka mozliwosc czytania z std wejscia
        dup(fd[0]); // tworzy duplikat deskryptora pliku i przekazuje numer tego deskryptora
        close(fd[0]);

        execlp("display", "display", "-", NULL); // wykonuje komende
    }
    else { // rodzic
        close(fd[0]);

        if((myFile = open(argv[1], O_RDONLY)) < 0) {
            
            fprintf(stderr, "Failed opening file\n");
            return 2;
        }
        
        while((n = read(myFile, &buf, size)) > 0) {
    
            if(write(fd[1], &buf, n) < 0) {
                fprintf(stderr, "Failed writing to pipe\n");
                return 3;
            }  
        }
        close(myFile);
    } 
}
